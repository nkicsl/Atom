var Web3 = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
var fs = require('fs');
var readline = require('readline');

var tips = process.argv[2];
var start;
var stop;

var abi = [
	{
		"constant": true,
		"inputs": [
			{
				"name": "_log1",
				"type": "string"
			},
			{
				"name": "_log2",
				"type": "string"
			}
		],
		"name": "check",
		"outputs": [
			{
				"name": "_a",
				"type": "string"
			}
		],
		"payable": false,
		"type": "function",
		"stateMutability": "view"
	}
];
var bytecode = "0x6060604052341561000c57fe5b5b6103528061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063725dbc401461003b575bfe5b341561004357fe5b6100d6600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061015f565b6040518080602001828103825283818151815260200191508051906020019080838360008314610125575b80518252602083111561012557602082019150602081019050602083039250610101565b505050905090810190601f1680156101515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610167610312565b60006000905060405180807f312e312e312e312053594e5f52454356000000000000000000000000000000008152506010019050604051809103902060001916846040518082805190602001908083835b602083106101db57805182526020820191506020810190506020830392506101b8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161480156102b5575060405180807f322e322e322e322053594e5f52454356000000000000000000000000000000008152506010019050604051809103902060001916836040518082805190602001908083835b60208310610282578051825260208201915060208101905060208303925061025f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916145b156102c35780806001019150505b600281141561030a57604060405190810160405280601281526020017f312e312e312e312c27424c4f434b494e47270000000000000000000000000000815250915061030b565b5b5092915050565b6020604051908101604052806000815250905600a165627a7a7230582087acd126bee6fd922096a89be8b3c69654e861170a820531b709cb6080939a0b0029";

function getTime() {
    current = new Date().getTime();
	fs.appendFile("./time.txt", (current - start).toString() + '\n', function (err) {
		if (err) { throw err; }
	})
}

async function deploy(tips){
    start = new Date().getTime();
    for(i = 1; i <= tips; i++){
        var Contract = new web3.eth.Contract(abi).deploy({ data: bytecode }).send({ from: accounts[0], gasLimit: 500000 }).on('receipt', function(receipt){
			getTime();
			console.log(receipt); 
		 });
    }
}

async function main(){
    //await Ut.sleep(100);
    accounts = await web3.eth.getAccounts();
    //console.log(accounts[0]);
    console.log("get accounts success!");
    deploy(tips);
}

main();